{"version":3,"sources":["logo.svg","components/CheckoutForm/CheckoutForm.js","api/items.js","components/Product/Product.js","components/Cart/CartItem/CartItem.js","components/Cart/Cart.js","serviceWorker.js","index.js","App.js"],"names":["module","exports","__webpack_require__","p","injectStripe","_ref","stripe","totalCost","_useState","useState","_useState2","Object","slicedToArray","status","setStatus","submit","_ref2","asyncToGenerator","regenerator_default","a","mark","_callee","e","_ref3","token","wrap","_context","prev","next","preventDefault","createToken","name","sent","fetch","method","body","JSON","stringify","amount","id","ok","Error","t0","stop","_x","apply","this","arguments","react_default","createElement","className","onSubmit","es","type","disabled","items","title","price","category","Product","onAddToCartClick","onClick","CartItem","cost","quantity","toFixed","Cart","itemsInCart","length","map","item","CartItem_CartItem","key","Boolean","window","location","hostname","match","ReactDOM","render","setItemsInCart","reduce","acc","src","logo","alt","Product_Product","itemInCart","find","objectSpread","concat","toConsumableArray","Cart_Cart","apiKey","components_CheckoutForm_CheckoutForm","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.a009cb4b.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo.5d5d9eef.svg\";","import React, { useState } from 'react';\r\nimport { CardElement, injectStripe } from 'react-stripe-elements';\r\nimport './CheckoutForm.css';\r\n\r\nfunction CheckoutForm({ stripe, totalCost }) {\r\n  const [status, setStatus] = useState('default');\r\n\r\n  const submit = async e => {\r\n    e.preventDefault();\r\n\r\n    setStatus('submitting');\r\n\r\n    try {\r\n      let { token } = await stripe.createToken({ name: 'Name' });\r\n\r\n      let response = await fetch('/.netlify/functions/charge', {\r\n        method: 'POST',\r\n        body: JSON.stringify({\r\n          amount: totalCost * 100,\r\n          token: token.id,\r\n        }),\r\n      });\r\n\r\n      if (response.ok) {\r\n        setStatus('complete');\r\n      } else {\r\n        throw new Error('Network response was not ok.');\r\n      }\r\n    } catch (err) {\r\n      setStatus('error');\r\n    }\r\n  };\r\n\r\n  if (status === 'complete') {\r\n    return <div className=\"CheckoutForm-complete\">Payment successful!</div>;\r\n  }\r\n\r\n  return (\r\n    <form className=\"CheckoutForm\" onSubmit={submit}>\r\n      <h4>Would you like to complete the purchase?</h4>\r\n      <CardElement />\r\n      <button\r\n        className=\"CheckoutForm-button\"\r\n        type=\"submit\"\r\n        disabled={status === 'submitting'}\r\n      >\r\n        {status === 'submitting' ? 'Submitting' : 'Submit Order'}\r\n      </button>\r\n      {status === 'error' && (\r\n        <div className=\"CheckoutForm-error\">Something went wrong.</div>\r\n      )}\r\n    </form>\r\n  );\r\n}\r\n\r\nexport default injectStripe(CheckoutForm);\r\n","export default [\r\n  {\r\n    id: 1,\r\n    title: 'Knitting Pattern',\r\n    price: 5.00,\r\n    category: 'Patterns',\r\n  },\r\n  {\r\n    id: 2,\r\n    title: 'Knitting Pattern 2',\r\n    price: 7.50,\r\n    category: 'Patterns',\r\n  },\r\n  {\r\n    id: 3,\r\n    title: 'Knitting Pattern 3',\r\n    price: 9.00,\r\n    category: 'Patterns',\r\n  },\r\n];\r\n","import React from 'react';\r\nimport './Product.css';\r\n\r\nexport default function Product({ onAddToCartClick, price, title }) {\r\n  return (\r\n    <div className=\"Product\">\r\n      <h2 className=\"Product-title\">{title}</h2>\r\n      <div className=\"Product-price\">${price}</div>\r\n      <button className=\"Product-buy-button\" onClick={onAddToCartClick}>\r\n        Add to cart\r\n      </button>\r\n    </div>\r\n  );\r\n}\r\n","import React from 'react';\r\nimport './CartItem.css';\r\n\r\nexport default function CartItem({ title, cost, quantity }) {\r\n  return (\r\n    <div className=\"CartItem\">\r\n      <div>{title}</div>\r\n      <div className=\"CartItem-details\">\r\n        <div className=\"CartItem-quantity\">Qty: {quantity}</div>\r\n        <div>${cost.toFixed(2)}</div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n","import React from 'react';\r\nimport CartItem from './CartItem/CartItem';\r\nimport './Cart.css';\r\n\r\nexport default function Cart({ itemsInCart, totalCost }) {\r\n  return (\r\n    <div className=\"Cart\">\r\n      <h2 className=\"Cart-title\">Your shopping cart</h2>\r\n      {itemsInCart.length > 0 ? (\r\n        <div>\r\n          {itemsInCart.map(item => (\r\n            <CartItem\r\n              key={item.id}\r\n              title={item.title}\r\n              cost={item.price * item.quantity}\r\n              quantity={item.quantity}\r\n            />\r\n          ))}\r\n          <div className=\"Cart-total-cost\">\r\n            Total cost: ${totalCost.toFixed(2)}\r\n          </div>\r\n        </div>\r\n      ) : (\r\n        <div>Your cart is empty</div>\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","import React, { useState } from 'react';\r\nimport { Elements, StripeProvider } from 'react-stripe-elements';\r\nimport CheckoutForm from './components/CheckoutForm/CheckoutForm';\r\nimport items from './api/items';\r\nimport Product from './components/Product/Product';\r\nimport Cart from './components/Cart/Cart';\r\nimport logo from './logo.svg';\r\nimport './App.css';\r\n\r\nexport default function App() {\r\n  const [itemsInCart, setItemsInCart] = useState([]);\r\n\r\n  const handleAddToCartClick = id => {\r\n    setItemsInCart(itemsInCart => {\r\n      const itemInCart = itemsInCart.find(item => item.id === id);\r\n\r\n      // if item is already in cart, update the quantity\r\n      if (itemInCart) {\r\n        return itemsInCart.map(item => {\r\n          if (item.id !== id) return item;\r\n          return { ...itemInCart, quantity: item.quantity + 1 };\r\n        });\r\n      }\r\n\r\n      // otherwise, add new item to cart\r\n      const item = items.find(item => item.id === id);\r\n      return [...itemsInCart, { ...item, quantity: 1 }];\r\n    });\r\n  };\r\n\r\n  const totalCost = itemsInCart.reduce(\r\n    (acc, item) => acc + item.price * item.quantity,\r\n    0\r\n  );\r\n\r\n  return (\r\n    <div className=\"App\">\r\n      <header className=\"App-header\">\r\n        <img src={logo} className=\"App-logo\" alt=\"logo\" />\r\n        <h1 className=\"App-header-text\">Dreamcast Shop</h1>\r\n      </header>\r\n      <main className=\"App-shop\">\r\n        <div className=\"App-products\">\r\n          {items.map(item => (\r\n            <Product\r\n              key={item.title}\r\n              title={item.title}\r\n              price={item.price}\r\n              onAddToCartClick={() => handleAddToCartClick(item.id)}\r\n            />\r\n          ))}\r\n        </div>\r\n        <Cart itemsInCart={itemsInCart} totalCost={totalCost} />\r\n        {itemsInCart.length > 0 && (\r\n          <StripeProvider apiKey=\"pk_test_WvMSGrL5G3LaV2b3Md0c5FaS\">\r\n            <Elements>\r\n              <CheckoutForm totalCost={totalCost} />\r\n            </Elements>\r\n          </StripeProvider>\r\n)}\r\n      </main>\r\n    </div>\r\n  );\r\n}\r\n"],"sourceRoot":""}